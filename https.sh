#!/bin/bash
if [ -d "$(pwd)/$1" ] 
then
	    cd $1 
    else
	        mkdir $1 && cd $1
fi
echo $(pwd)
hping3 $1 -p $2 -S --tcp-timestamp -c 5 | tee time-stamp_$1_$2_hping3.txt
nmap $1 -p $2 -Pn -sS --script=asn-query -T3 -vvv -oN nmap_$1_$2_asn-query.txt
nmap $1 -p $2 -Pn -sS --script=ssl-cert,ssl-enum-ciphers -sV --version-all -T5 -vvv -oN nmap_$1_$2_ssl-cert.txt
#dns-brute (only works if we have domain name)
#nmap $1 -p $2 -Pn -sS --script=dns-brute -T5 -vvv -oN nmap_dns-brute.txt
nmap $1 -p $2 -Pn -sS --script=http-date,ssl-date -sV --version-all -T3 -vvv -oN nmap_$1_$2_http-date,ssl-date.txt
nmap $1 -p $2 -Pn -sS --script=http-methods -sV --version-all -T3 -vvv -oN nmap_$1_$2_http-methods.txt
nmap $1 -p $2 -Pn -sS --script=http-security-headers -sV --version-all -T3 -vvv -oN nmap_$1_$2_http-security-headers.txt
#nmap $1 -p $2 -Pn -sS --script=http-waf-detect,http-waf-fingerprint --script-args="http-waf-detect.aggro,http-waf-detect.detectBodyChanges,http-waf-fingerprint.intensive=1" -sV --version-all -T5 -vvv -oN nmap_$1_$2_http-waf-detect.txt
sslyze $1:$2 | tee sslyze$1_$2.txt
testssl --html $1:$2
certigo connect $1:$2 | tee certigo_$1_$2.txt
wafw00f https://$1:$2/ -o wafw00f_$1_$2.txt
nikto -C all -maxtime=400s -host https://$1:$2/ | tee nikto$1_$2.txt
whois $1 | tee whois_$1.txt
dirsearch -u https://$1:$2/ -o $(pwd)/dirsearch_$1_$2.txt
echo "Please run DOS test cases seperatly!"